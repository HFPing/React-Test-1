{"version":3,"sources":["screens/Home/Home.jsx","components/BarChartAm/BarChartAm.jsx","screens/Plots/Tabs/Example1.jsx","components/BarChart/BarChart.jsx","components/BarChartTuto/BarChartTuto.jsx","screens/Plots/Tabs/Example2.jsx","components/ScatterPlotTuto/ScatterPlotTuto.jsx","screens/Plots/Tabs/Example3.jsx","screens/Plots/Tabs/Example4.jsx","screens/Plots/Tabs/Example5.jsx","screens/Plots/Tabs/Example6.jsx","screens/Plots/Tabs/Example7.jsx","screens/Plots/Tabs/Example8.jsx","screens/Plots/Tabs/Example9.jsx","screens/Plots/Plots.jsx","App.js","utils/serviceWorker.js","index.js"],"names":["Header","_ref","classes","react_default","a","createElement","AppBar_default","position","Toolbar_default","IconButton_default","className","menuButton","color","aria-label","Menu_default","Typography_default","variant","grow","Button_default","BottomBar","_ref2","appBarBottom","toolbar","Search_default","MoreVert_default","Home","this","props","root","index_es","Home_Header","Home_BottomBar","PureComponent","withStyles","flexGrow","marginLeft","marginRight","top","bottom","alignItems","justifyContent","am4core","am4themes_animated","Barchart","drawChart","chart","dispose","am4charts","data","dummyDataArr","categoryAxis","xAxes","push","dataFields","category","renderer","grid","template","location","tooltip","disabled","yAxes","series","valueY","categoryX","name","columns","tooltipText","fillOpacity","height","sequencedInterpolation","adapter","add","fill","target","colors","getIndex","dataItem","index","valueLabel","bullets","label","text","horizontalCenter","hideOversized","truncate","dy","columnTemplate","strokeWidth","strokeOpacity","id","style","width","defaultProps","Example1","BarChartAm","_this$props","paddingInner","paddingOuter","xLabel","yLabel","padding","widthInt","fontSize","heightInt","undefined","barWidth","length","svg","d3","append","attr","y","domain","d","range","x","map","val","yAxisCall","tickFormat","concat","ticks","tickSize","call","xAxisCall","selectAll","enter","i","ref","window","innerWidth","innerHeight","marginTop","marginBottom","borderColor","borderWidth","borderStyle","backgroundColor","g","xAxisGroup","yAxisGroup","t","newData","intervalVar","Example2","BarChart_BarChart","month","revenue","profit","margin","flag","remove","stop","_this","slice","update","myData","duration","dataSrc","transition","rects","exit","bandwidth","ScatterPlot","Example3","BarChartTuto","ScatterPlotTuto","styles","Example4","dataset","Example5","yScale","Example6","xScale","x_axis","scale","y_axis","Example7","Example8","radius","Math","min","pie","value","percentage","path","outerRadius","innerRadius","arc","platform","centroid","Example9","n","PI","line","curve","sin","tickSizeInner","datum","Plots","state","handleChange","event","setState","Tabs_default","scrollable","onChange","Tab_default","Tabs_Example1","Tabs_Example2","Tabs_Example3","Tabs_Example4","Tabs_Example5","Tabs_Example6","Tabs_Example7","Tabs_Example8","Plots_Tabs_Example9","theme","createMuiTheme","palette","primary","light","blue","main","dark","secondary","green","typography","useNextVariants","shape","borderRadius","BrowserRouter","App_Header","Route","exact","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58d19b80.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { CssBaseline } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  appBarBottom: {\n    top: 'auto',\n    bottom: 0,\n  },\n  toolbar: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n};\n\nconst Header = ({ classes }) => (\n  <AppBar position=\"static\">\n    <Toolbar>\n      <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n        Home Screen\n      </Typography>\n      <Button color=\"inherit\">Login</Button>\n    </Toolbar>\n  </AppBar>\n);\n\nconst BottomBar = ({ classes }) => (\n  <AppBar position=\"fixed\" color=\"primary\" className={classes.appBarBottom}>\n    <Toolbar className={classes.toolbar}>\n      <IconButton color=\"inherit\" aria-label=\"Open drawer\">\n        <MenuIcon />\n      </IconButton>\n      <div>\n        <IconButton color=\"inherit\">\n          <SearchIcon />\n        </IconButton>\n        <IconButton color=\"inherit\">\n          <MoreIcon />\n        </IconButton>\n      </div>\n    </Toolbar>\n  </AppBar>\n);\n\nclass Home extends PureComponent {\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <Header classes={classes} />\n          Home Screen\n        <BottomBar classes={classes} />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Home);\n","import React, { PureComponent } from 'react';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport PropTypes from 'prop-types';\n\nimport dummyDataArr from './data.json';\n\nam4core.useTheme(am4themes_animated);\n\nclass Barchart extends PureComponent {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  drawChart() {\n    // Create chart instance\n    let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n\n    // Add data\n    chart.data = dummyDataArr;\n\n    // Create axes\n    let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = \"country\";\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.tooltip.disabled = true;\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n\n    // Create series\n    let series = chart.series.push(new am4charts.ColumnSeries());\n    series.dataFields.valueY = \"visits\";\n    series.dataFields.categoryX = \"country\";\n    series.name = \"Visits\";\n    series.columns.template.tooltipText = \"{categoryX}: [bold]{valueY}[/]\";\n    series.columns.template.fillOpacity = .8;\n    series.columns.template.height = am4core.percent(60);\n    series.sequencedInterpolation = true;\n    series.columns.template.adapter.add(\"fill\", (fill, target) => {\n      return chart.colors.getIndex(target.dataItem.index);\n    });\n\n    let valueLabel = series.bullets.push(new am4charts.LabelBullet());\n    valueLabel.label.text = \"{valueY}\";\n    valueLabel.label.horizontalCenter = \"middle\";\n    valueLabel.label.hideOversized = false;\n    valueLabel.label.truncate = false;\n    valueLabel.label.dy = -10;\n\n    let columnTemplate = series.columns.template;\n    columnTemplate.strokeWidth = 2;\n    columnTemplate.strokeOpacity = 1;\n\n    this.chart = chart;\n  }\n\n  render () {\n    return <div id=\"chartdiv\"  style={{ width: \"100%\", height: \"500px\" }} />;\n  };\n}\n\nBarchart.propTypes = {\n\n};\n\nBarchart.defaultProps = {\n\n};\n\nexport default Barchart;\n","import React, { PureComponent } from 'react';\n\nimport Barchart from '../../../components/BarChartAm/BarChartAm';\n\nclass Example1 extends PureComponent {\n  render() {\n    return (\n      <div style={{ }}>\n        <Barchart />\n      </div>\n    );\n  }\n}\n\nexport default Example1;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as d3 from 'd3';\n\nimport './BarChart.css';\n\nclass Barchart extends PureComponent {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  drawChart() {\n    // Props aquire\n    const {\n      style,\n      paddingInner,\n      paddingOuter,\n      data,\n      xLabel,\n      yLabel,\n    } = this.props;\n    const {\n      width,\n      height,\n      padding,\n    } = style;\n\n    // Parameter definition\n    const fontSize = 20;\n    const horizontalPadding = fontSize * 3;\n    const verticalPadding = fontSize * (xLabel !== undefined ? 2 : 1);\n    const widthInt = width - horizontalPadding;\n    const heightInt = height - verticalPadding - 2 * padding;\n\n    // Barchart variable width definition\n    const barWidth =\n    (widthInt / data.length)\n    - (paddingInner * widthInt / data.length);\n\n    // Main svg canvas container\n    const svg = d3.select('#myChart')\n      .append('svg')\n      .attr('width', width)\n      .attr('height', height);\n\n    // Y axis scale function\n    const y = d3.scaleLinear()\n      .domain([0, d3.max(data, (d) => d.height) * 1.1])\n      .range([heightInt, 0]);\n\n    // X axis scale function\n    const x = d3.scaleBand()\n      .domain(data.map(val => val.name))\n      .range([\n        horizontalPadding,\n        widthInt + horizontalPadding - 2 * padding - 2\n      ])\n      .paddingInner(paddingInner)\n      .paddingOuter(paddingOuter);\n\n    // Y axis render\n    const yAxisCall = d3.axisLeft(y)\n      .tickFormat((d) => `${d}%`)\n      .ticks(20)\n      .tickSize(- widthInt + 2 * padding);\n    svg.append('g')\n      .attr('class', 'y-axis grid')\n      .attr('transform', `translate(${horizontalPadding}, ${0})`)\n      .call(yAxisCall);\n    svg.append('text')\n      .attr('class', 'y axis-label')\n      .attr('transform', 'rotate(-90)')\n      .attr('x', - height / 2)\n      .attr('y', (fontSize * 0.8))\n      .attr('font-size', `${fontSize}px`)\n      .attr('text-anchor', 'middle')\n      .text(yLabel);\n\n    // X axis render\n    const xAxisCall = d3.axisBottom(x);\n    svg.append('g')\n      .attr('class', 'x axis')\n      .attr('transform', `translate(${0}, ${heightInt})`)\n      .call(xAxisCall);\n    if (xLabel !== undefined) {\n      svg.append('text')\n        .attr('class', 'x axis-label')\n        .attr('x', (width + horizontalPadding) / 2)\n        .attr('y', height - (fontSize * 0.3) - 2 * padding)\n        .attr('font-size', `${fontSize}px`)\n        .attr('text-anchor', 'middle')\n        .text(xLabel);\n    }\n\n    // Bar chart render\n    svg.selectAll('rect')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('y', (d) => y(d.height))\n      .attr('x', (d, i) => x(d.name))\n      .attr('width', barWidth)\n      .attr('height', (d) => heightInt - y(d.height))\n      .attr('fill', (d, i) => d3.schemeCategory10[i]);\n\n    // Bar-top annotations\n    svg.selectAll('svg')\n      .data(data)\n      .enter()\n      .append('text')\n      .text((d) => `${d.height}%`)\n      .attr('x', (d, i) => x(d.name) + barWidth / 2)\n      .attr('y', (d) => y(d.height) - 5)\n      .attr('text-anchor', 'middle')\n      .attr(\"fill\", \"#000000\");\n  }\n\n  render () {\n    const { style } = this.props;\n    return <div style={style} id=\"myChart\" ref=\"child\" />;\n  };\n}\n\nBarchart.propTypes = {\n  // Structure of the data array prop\n  data: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    height: PropTypes.number.isRequired,\n  })).isRequired,\n  paddingInner: PropTypes.number,\n  paddingOuter: PropTypes.number,\n  style: PropTypes.object,\n  xLabel: PropTypes.string,\n  yLabel: PropTypes.string,\n};\n\nBarchart.defaultProps = {\n  paddingInner: 0.2,\n  paddingOuter: 0.1,\n  xLabel: undefined,\n  yLabel: 'Y Axis',\n  style: {\n    width: window.innerWidth,\n    height: window.innerHeight / 2,\n    marginLeft: 0,\n    marginRight: 0,\n    marginTop: 0,\n    marginBottom: 0,\n    padding: 0,\n    borderColor: 'black',\n    borderWidth: 1,\n    borderStyle:'',\n    backgroundColor: '',\n  }\n};\n\nexport default Barchart;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as d3 from 'd3';\n\n// TODO: Fix -> Error: too late; already started\n//* Appears when changing tabs, mostly\n\nconst data = [\n\t{\n\t\t\"month\": \"January\",\n\t\t\"revenue\": 13432,\n\t\t\"profit\": 8342\n\t},\n\t{\n\t\t\"month\": \"February\",\n\t\t\"revenue\": 19342,\n\t\t\"profit\": 10342\n\t},\n\t{\n\t\t\"month\": \"March\",\n\t\t\"revenue\": 17443,\n\t\t\"profit\": 15423\n\t},\n\t{\n\t\t\"month\": \"April\",\n\t\t\"revenue\": 26342,\n\t\t\"profit\": 18432\n\t},\n\t{\n\t\t\"month\": \"May\",\n\t\t\"revenue\": 34213,\n\t\t\"profit\": 29434\n\t},\n\t{\n\t\t\"month\": \"June\",\n\t\t\"revenue\": 50321,\n\t\t\"profit\": 45343\n\t},\n\t{\n\t\t\"month\": \"July\",\n\t\t\"revenue\": 54273,\n\t\t\"profit\": 47452\n\t}\n];\n\nconst margin = { left:80, right:20, top:50, bottom:100 };\n\nconst width = 600 - margin.left - margin.right,\n      height = 400 - margin.top - margin.bottom;\n\nlet g,\n    x,\n    y,\n    xAxisGroup,\n    yAxisGroup,\n    flag = false,\n    yLabel,\n    t,\n    newData,\n    intervalVar;\n\nclass Barchart extends PureComponent {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  componentWillUnmount() {\n    g.selectAll(\"*\").remove();\n    intervalVar.stop();\n  }\n\n  drawChart() {\n    g = d3.select(\"#myChart\")\n      .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \", \" + margin.top + \")\");\n\n    xAxisGroup = g.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height +\")\");\n\n    yAxisGroup = g.append(\"g\")\n      .attr(\"class\", \"y axis\");\n\n    // X Scale\n    x = d3.scaleBand()\n      .range([0, width])\n      .padding(0.2);\n\n    // Y Scale\n    y = d3.scaleLinear()\n      .range([height, 0]);\n\n    // X Label\n    g.append(\"text\")\n      .attr(\"y\", height + 50)\n      .attr(\"x\", width / 2)\n      .attr(\"font-size\", \"20px\")\n      .attr(\"text-anchor\", \"middle\")\n      .text(\"Month\");\n\n    // Y Label\n    yLabel = g.append(\"text\")\n      .attr(\"y\", -60)\n      .attr(\"x\", -(height / 2))\n      .attr(\"font-size\", \"20px\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(\"Revenue\");\n\n    intervalVar = d3.interval(() => {\n      newData = flag ? data : data.slice(1);\n      this.update(newData);\n      flag = !flag;\n    }, 1000);\n\n    // Run for the first time\n    this.update(data);\n  }\n\n  update (myData) {\n    t = d3.transition().duration(750);\n    const dataSrc = flag ? \"revenue\" : \"profit\";\n\n    x.domain(myData.map((d) => d.month));\n    y.domain([0, d3.max(myData,(d) => d[dataSrc])]);\n\n    // X Axis\n    const xAxisCall = d3.axisBottom(x);\n    xAxisGroup.transition(t).call(xAxisCall);\n    \n    // Y Axis\n    const yAxisCall = d3.axisLeft(y)\n      .tickFormat((d) => \"$\" + d);\n    yAxisGroup.transition(t).call(yAxisCall);\n\n    // Join new data with old elements\n    const rects = g.selectAll(\"rect\")\n      // Match the column data with a spacial key, insted of the array index\n      .data(myData, (d) => d.month);\n\n    // Exit old elements not present in new data\n    rects.exit()\n        .attr('fill', 'red')\n      .transition(t)\n        .attr(\"y\", y(0))\n        .attr(\"height\", 0)\n        .remove();\n\n    // Update old elements present in new data\n    rects.transition(t)\n      .attr(\"y\", (d) => y(d[dataSrc]))\n      .attr(\"x\", (d) => x(d.month))\n      .attr(\"height\", (d) => height - y(d[dataSrc]))\n      .attr(\"width\", x.bandwidth());\n\n    // Enter new elements present in new data\n    rects.enter()\n      .append(\"rect\")\n        .attr(\"x\", (d) => x(d.month))\n        .attr(\"y\", y(0))\n        .attr(\"height\", 0)\n        .attr(\"width\", x.bandwidth())\n        .attr(\"fill\", \"grey\")\n      .transition(t)\n        .attr(\"y\", (d) => y(d[dataSrc]))\n        .attr(\"height\", (d) => height - y(d[dataSrc]));\n\n    yLabel.text(flag ? 'Revenue' : 'Profit');\n  }\n\n  render () {\n    return <div id=\"myChart\" />;\n  };\n}\n\nBarchart.propTypes = {\n\n};\n\nBarchart.defaultProps = {\n\n};\n\nexport default Barchart;\n","import React, { PureComponent } from 'react';\n\nimport Barchart from '../../../components/BarChart/BarChart';\n//import chroma from 'chroma-js';\n\nconst data = [\n  {\n    name: 'BAE',\n    height: 27,\n  },\n  {\n    name: 'BOD',\n    height: 42.16,\n  },\n  {\n    name: 'MBO',\n    height: 7.85,\n  },\n  {\n    name: 'SCE',\n    height: 33.39,\n  },\n  {\n    name: 'SUP',\n    height: 5.71,\n  },\n];\n\nclass Example2 extends PureComponent {\n  render() {\n    return (\n      <div style={{ }}>\n        <Barchart\n          data={data}\n          yLabel=\"% of Total Sales\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Example2;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport * as d3 from 'd3';\n\nconst data = [\n\t{\n\t\t\"month\": \"January\",\n\t\t\"revenue\": 13432,\n\t\t\"profit\": 8342\n\t},\n\t{\n\t\t\"month\": \"February\",\n\t\t\"revenue\": 19342,\n\t\t\"profit\": 10342\n\t},\n\t{\n\t\t\"month\": \"March\",\n\t\t\"revenue\": 17443,\n\t\t\"profit\": 15423\n\t},\n\t{\n\t\t\"month\": \"April\",\n\t\t\"revenue\": 26342,\n\t\t\"profit\": 18432\n\t},\n\t{\n\t\t\"month\": \"May\",\n\t\t\"revenue\": 34213,\n\t\t\"profit\": 29434\n\t},\n\t{\n\t\t\"month\": \"June\",\n\t\t\"revenue\": 50321,\n\t\t\"profit\": 45343\n\t},\n\t{\n\t\t\"month\": \"July\",\n\t\t\"revenue\": 54273,\n\t\t\"profit\": 47452\n\t}\n];\n\nconst margin = { left:80, right:20, top:50, bottom:100 };\n\nconst width = 600 - margin.left - margin.right,\n      height = 400 - margin.top - margin.bottom;\n\nlet g,\n    x,\n    y,\n    xAxisGroup,\n    yAxisGroup,\n    flag,\n    yLabel,\n    t,\n    newData,\n    intervalVar;\n\nclass ScatterPlot extends PureComponent {\n  componentDidMount() {\n    flag = false;\n    this.drawChart();\n  }\n\n  componentWillUnmount() {\n    g.selectAll(\"*\").remove();\n    intervalVar.stop();\n  }\n\n  drawChart() {\n    g = d3.select(\"#myChart\")\n      .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \", \" + margin.top + \")\");\n\n    xAxisGroup = g.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height +\")\");\n\n    yAxisGroup = g.append(\"g\")\n      .attr(\"class\", \"y axis\");\n\n    // X Scale\n    x = d3.scaleBand()\n      .range([0, width])\n      .padding(0.2);\n\n    // Y Scale\n    y = d3.scaleLinear()\n      .range([height, 0]);\n\n    // X Label\n    g.append(\"text\")\n      .attr(\"y\", height + 50)\n      .attr(\"x\", width / 2)\n      .attr(\"font-size\", \"20px\")\n      .attr(\"text-anchor\", \"middle\")\n      .text(\"Month\");\n\n    // Y Label\n    yLabel = g.append(\"text\")\n      .attr(\"y\", -60)\n      .attr(\"x\", -(height / 2))\n      .attr(\"font-size\", \"20px\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(\"Revenue\");\n\n    intervalVar = d3.interval(() => {\n      newData = flag ? data : data.slice(1);\n      flag = !flag;\n      this.update(newData);\n    }, 1000);\n\n    // Run for the first time\n    this.update(data);\n  }\n\n  update (myData) {\n    t = d3.transition().duration(750); // Fixes: too late; already started'\n    const dataSrc = flag ? \"revenue\" : \"profit\";\n\n    x.domain(myData.map((d) => d.month));\n    y.domain([0, d3.max(myData,(d) => d[dataSrc])]);\n\n    // X Axis\n    const xAxisCall = d3.axisBottom(x);\n    xAxisGroup.transition(t).call(xAxisCall);\n    \n    // Y Axis\n    const yAxisCall = d3.axisLeft(y)\n      .tickFormat((d) => \"$\" + d);\n    yAxisGroup.transition(t).call(yAxisCall);\n\n    // Join new data with old elements\n    const rects = g.selectAll(\"circle\")\n      // Match the column data with a spacial key, insted of the array index\n      .data(myData, (d) => d.month);\n\n    // Exit old elements not present in new data\n    rects.exit()\n        .attr('fill', 'red')\n      .transition(t)\n        .attr(\"cy\", y(0))\n        .remove();\n\n    // Update old elements present in new data\n    rects.transition(t)\n      .attr(\"cy\", (d) => y(d[dataSrc]))\n      .attr(\"cx\", (d) => x(d.month) + x.bandwidth() / 2)\n      .attr(\"r\", 5);\n\n    // Enter new elements present in new data\n    rects.enter()\n      .append(\"circle\")\n        .attr(\"cx\", (d) => x(d.month) + x.bandwidth() / 2)\n        .attr(\"cy\", y(0))\n        .attr(\"r\", 5)\n        .attr(\"fill\", \"grey\")\n      .transition(t)\n        .attr(\"cy\", (d) => y(d[dataSrc]));\n\n    yLabel.text(flag ? 'Revenue' : 'Profit');\n  }\n\n  render () {\n    return <div id=\"myChart\" />;\n  };\n}\n\nScatterPlot.propTypes = {\n\n};\n\nScatterPlot.defaultProps = {\n\n};\n\nexport default ScatterPlot;\n","import React, { PureComponent } from 'react';\n\nimport Barchart from '../../../components/BarChartTuto/BarChartTuto';\nimport ScatterPlot from '../../../components/ScatterPlotTuto/ScatterPlotTuto';\n\nclass Example3 extends PureComponent {\n  render() {\n    return (\n      <div style={{ }}>\n        <Barchart />\n        <ScatterPlot />\n      </div>\n    );\n  }\n}\n\nexport default Example3;\n","import React, { PureComponent } from 'react';\n\nimport * as d3 from 'd3';\n\nconst styles = {\n  root: {\n    backgroundColor: \"#C7D9D9\",\n    width: \"500\",\n    height: \"800\",\n  }\n};\n\nclass Example4 extends PureComponent {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  drawChart() {\n    const dataset = [80, 100, 56, 120, 180, 30, 40, 120, 160];\n    const svgWidth = 500, svgHeight = 300, barPadding = 5;\n    const barWidth = svgWidth / dataset.length;\n    const svg = d3.select('#myChart')\n      .append('svg')\n      .attr(\"width\", svgWidth)\n      .attr(\"height\", svgHeight);\n        \n    svg.selectAll(\"rect\")\n      .data(dataset)\n      .enter()\n      .append(\"rect\")\n      .attr(\"y\", function(d) {\n          return svgHeight - d \n      })\n      .attr(\"height\", function(d) { \n          return d; \n      })\n      .attr(\"width\", barWidth - barPadding)\n      .attr(\"class\", \"bar\")\n      .attr(\"transform\", function (d, i) {\n          var translate = [barWidth * i, 0]; \n          return \"translate(\"+ translate +\")\";\n      });\n\n    svg.selectAll(\"text\")\n      .data(dataset)\n      .enter()\n      .append(\"text\")\n      .text(function(d) {\n          return d;\n      })\n      .attr(\"y\", function(d, i) {\n          return svgHeight - d - 2;\n      })\n      .attr(\"x\", function(d, i) {\n          return barWidth * i;\n      })\n      .attr(\"fill\", \"#A64C38\");\n  }\n\n  render() {\n    return (\n      <div id=\"myChart\" style={styles.root} />\n    );\n  }\n}\n\nexport default Example4;\n","import React, { PureComponent } from 'react';\n\nimport * as d3 from 'd3';\n\nconst styles = {\n  root: {\n    backgroundColor: \"#C7D9D9\",\n  }\n};\n\nclass Example5 extends PureComponent {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  drawChart() {\n    const dataset = [1, 2, 3, 4, 5];\n\n    const svgWidth = 500, svgHeight = 300, barPadding = 5;\n    const barWidth = (svgWidth / dataset.length);\n    \n    \n    const svg = d3.select('#myChart')\n      .append(\"svg\")\n      .attr(\"width\", svgWidth)\n      .attr(\"height\", svgHeight);\n\n    const yScale = d3.scaleLinear()\n      .domain([0, d3.max(dataset)])\n      .range([0, svgHeight]);\n        \n    svg.selectAll(\"rect\")\n      .data(dataset)\n      .enter()\n      .append(\"rect\")\n      .attr(\"y\", function(d) {\n           return svgHeight - yScale(d) \n      })\n      .attr(\"height\", function(d) { \n          return yScale(d); \n      })\n      .attr(\"width\", barWidth - barPadding)\n      .attr(\"transform\", function (d, i) {\n          var translate = [barWidth * i, 0]; \n          return \"translate(\"+ translate +\")\";\n      });\n  }\n\n  render() {\n    return (\n      <div id=\"myChart\" style={styles.root} />\n    );\n  }\n}\n\nexport default Example5;\n","import React, { PureComponent } from 'react';\n\nimport * as d3 from 'd3';\n\nconst styles = {\n  root: {\n    backgroundColor: \"#C7D9D9\",\n    width: \"500\",\n    height: \"800\",\n  }\n};\n\nclass Example6 extends PureComponent {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  drawChart() {\n    const data= [80, 100, 56, 120, 180, 30, 40, 120, 160];\n\n    const svgWidth = 500, svgHeight = 300;\n    \n    const svg = d3.select('#myChart')\n      .append(\"svg\")\n      .attr(\"width\", svgWidth)\n      .attr(\"height\", svgHeight);\n    \n      const xScale = d3.scaleLinear()\n      .domain([0, d3.max(data)])\n      .range([0, svgWidth]);\n             \n      const yScale = d3.scaleLinear()\n      .domain([0, d3.max(data)])\n      .range([svgHeight, 0]);\n         \n      const x_axis = d3.axisBottom().scale(xScale);\n    \n      const y_axis = d3.axisLeft().scale(yScale);\n             \n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(50, 10)\")\n      .call(y_axis);\n             \n      const xAxisTranslate = svgHeight - 20;\n             \n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(50, \" + xAxisTranslate  +\")\")\n      .call(x_axis);\n  }\n\n  render() {\n    return (\n      <div id=\"myChart\" style={styles.root} />\n    );\n  }\n}\n\nexport default Example6;\n","import React, { PureComponent } from 'react';\n\nimport * as d3 from 'd3';\n\nconst styles = {\n  root: {\n    backgroundColor: \"#C7D9D9\",\n  }\n};\n\nclass Example7 extends PureComponent {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  drawChart() {\n    const svgWidth = 600, svgHeight = 500;\n    const svg = d3.select(\"#myChart\")\n      .append(\"svg\")\n      .attr(\"width\", svgWidth)\n      .attr(\"height\", svgHeight)\n      .attr(\"class\", \"svg-container\")\n        \n    svg.append(\"line\")\n      .attr(\"x1\", 100)\n      .attr(\"x2\", 500)\n      .attr(\"y1\", 50)\n      .attr(\"y2\", 50)\n      .attr(\"stroke\", \"red\");\n\n    svg.append(\"rect\")\n      .attr(\"x\", 100)\n      .attr(\"y\", 100)\n      .attr(\"width\", 200)\n      .attr(\"height\", 100)\n      .attr(\"fill\", \"#9B95FF\");\n\n    svg.append(\"circle\")\n      .attr(\"cx\", 200)\n      .attr(\"cy\", 300)\n      .attr(\"r\", 80)\n      .attr(\"fill\", \"#7CE8D5\");\n  }\n\n  render() {\n    return (\n      <div id=\"myChart\" style={styles.root} />\n    );\n  }\n}\n\nexport default Example7;\n","import React, { PureComponent } from 'react';\n\nimport * as d3 from 'd3';\n\nconst styles = {\n  root: {\n    backgroundColor: \"#C7D9D9\",\n  }\n};\n\nclass Example8 extends PureComponent {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  drawChart() {\n    const data = [\n      {\"platform\": \"Android\", \"percentage\": 40.11}, \n      {\"platform\": \"Windows\", \"percentage\": 36.69},\n      {\"platform\": \"iOS\", \"percentage\": 13.06}\n    ];\n    \n    const svgWidth = 500, svgHeight = 300, radius =  Math.min(svgWidth, svgHeight) / 2;\n    const svg = d3.select('#myChart')\n      .append(\"svg\")\n      .attr(\"width\", svgWidth)\n      .attr(\"height\", svgHeight);\n    \n    //Create group element to hold pie chart    \n    const g = svg.append(\"g\")\n      .attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\") ;\n    \n    const color = d3.scaleOrdinal(d3.schemeCategory10);\n    \n    const pie = d3.pie().value(function(d) { \n        return d.percentage; \n    });\n    \n    const path = d3.arc()\n      .outerRadius(radius)\n      .innerRadius(0);\n    \n    const arc = g.selectAll(\"arc\")\n      .data(pie(data))\n      .enter()\n      .append(\"g\");\n    \n    arc.append(\"path\")\n      .attr(\"d\", path)\n      .attr(\"fill\", function(d) { return color(d.data.percentage); });\n            \n    const label = d3.arc()\n      .outerRadius(radius)\n      .innerRadius(0);\n                \n    arc.append(\"text\")\n      .attr(\"transform\", function(d) { \n          return \"translate(\" + label.centroid(d) + \")\"; \n      })\n      .attr(\"text-anchor\", \"middle\")\n      .text(function(d) { return d.data.platform+\":\"+d.data.percentage+\"%\"; });\n  }\n\n  render() {\n    return (\n      <div id=\"myChart\" style={styles.root} />\n    );\n  }\n}\n\nexport default Example8;\n","import React, { PureComponent } from 'react';\nimport './Example9.css';\n\nimport * as d3 from 'd3';\n\nconst styles = {\n  root: {\n  }\n};\n\nclass Example9 extends PureComponent {\n  componentDidMount() {\n    this.drawChart();\n  }\n\n  drawChart() {\n    // 2. Use the margin convention practice \n    var margin = {top: 50, right: 50, bottom: 50, left: 50}\n      , width = 900 - margin.left - margin.right // Use the window's width \n      , height = 600 - margin.top - margin.bottom; // Use the window's height\n\n    // The number of datapoints\n    var n = 100;\n\n    // 5. X scale will use the index of our data\n    var xScale = d3.scaleLinear()\n      .domain([0, 2 * Math.PI]) // input\n      .range([0, width]); // output\n\n    // 6. Y scale will use the randomly generate number \n    var yScale = d3.scaleLinear()\n      .domain([-1, 1]) // input \n      .range([height, 0]); // output \n\n    // 7. d3's line generator\n    var line = d3.line()\n      .x(function(d, i) { return xScale(2 * Math.PI * i / n); }) // set the x values for the line generator\n      .y(function(d) { return yScale(d.y); }) // set the y values for the line generator \n      .curve(d3.curveMonotoneX) // apply smoothing to the line\n\n    // 8. An array of objects of length N. Each object has key -> value pair, the key being \"y\" and the value is a random number\n    var dataset = d3.range(n).map(function(d) { return {\"y\": Math.sin(2 * Math.PI * d / n) } })\n\n    // 1. Add the SVG to the page and employ #2\n    var svg = d3.select(\"#myChart\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // 3. Call the x axis in a group tag\n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(xScale)); // Create an axis component with d3.axisBottom\n\n    // 4. Call the y axis in a group tag\n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(d3.axisLeft(yScale).tickSizeInner(-width)); // Create an axis component with d3.axisLeft\n\n    // 9. Append the path, bind the data, and call the line generator \n    svg.append(\"path\")\n      .datum(dataset) // 10. Binds data to the line \n      .attr(\"class\", \"line\") // Assign a class for styling \n      .attr(\"d\", line); // 11. Calls the line generator \n\n    // 12. Appends a circle for each datapoint \n    svg.selectAll(\".dot\")\n        .data(dataset)\n      .enter().append(\"circle\") // Uses the enter().append() method\n        .attr(\"class\", \"dot\") // Assign a class for styling\n        .attr(\"cx\", function(d, i) { return xScale(2 * Math.PI * i / n) })\n        .attr(\"cy\", function(d) { return yScale(d.y) })\n        .attr(\"r\", 5);\n  }\n\n  render() {\n    return (\n      <div id=\"myChart\" style={styles.root} />\n    );\n  }\n}\n\nexport default Example9;\n","import React, { PureComponent } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport Example1 from './Tabs/Example1';\nimport Example2 from './Tabs/Example2';\nimport Example3 from './Tabs/Example3';\nimport Example4 from './Tabs/Example4';\nimport Example5 from './Tabs/Example5';\nimport Example6 from './Tabs/Example6';\nimport Example7 from './Tabs/Example7';\nimport Example8 from './Tabs/Example8';\nimport Example9 from './Tabs/Example9';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  }\n};\n\nclass Plots extends PureComponent {\n  state = { value: 0 };\n\n  handleChange = (event, value) => this.setState({ value });\n\n  render() {\n    const { value } = this.state;\n    return (\n      <div style={styles.root}>\n        <AppBar position=\"static\">\n          <Tabs scrollable value={value} onChange={this.handleChange}>\n            <Tab label=\"Main\" />\n            <Tab label=\"D3 Share of Format\" />\n            <Tab label=\"D3 Tuto\" />\n            <Tab label=\"Tuto - Annotations\" />\n            <Tab label=\"Tuto - Scaling\" />\n            <Tab label=\"Tuto - Axis\" />\n            <Tab label=\"Tuto - SVG Elements\" />\n            <Tab label=\"Tuto - Pie Charts\" />\n            <Tab label=\"Tuto - Line Charts\" />\n          </Tabs>\n        </AppBar>\n        {value === 0 && <Example1 />}\n        {value === 1 && <Example2 />}\n        {value === 2 && <Example3 />}\n        {value === 3 && <Example4 />}\n        {value === 4 && <Example5 />}\n        {value === 5 && <Example6 />}\n        {value === 6 && <Example7 />}\n        {value === 7 && <Example8 />}\n        {value === 8 && <Example9 />}\n      </div>\n    );\n  }\n}\n\nexport default Plots;\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { blue, green } from \"@material-ui/core/colors\";\n\nimport Home from './screens/Home/Home';\nimport Plots from './screens/Plots/Plots';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: blue[300],\n      main: blue[500],\n      dark: blue[700]\n    },\n    secondary: {\n      light: green[300],\n      main: green[500],\n      dark: green[700]\n    }\n  },\n  typography: {\n    useNextVariants: true\n  },\n  shape: { borderRadius: 4 }\n});\n\n/*const Error = () => (\n  <div>\n    <p>Path does not exist</p>\n  </div>\n)*/\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  appBarBottom: {\n    top: 'auto',\n    bottom: 0,\n  },\n  toolbar: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n};\n\nconst Header = ({ classes }) => (\n  <AppBar position=\"relative\">\n    <CssBaseline />\n    <Toolbar>\n      <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n        <MenuIcon />\n      </IconButton>\n      <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n        React Demo\n      </Typography>\n      <Button color=\"inherit\">Login</Button>\n    </Toolbar>\n  </AppBar>\n);\n\n/*const BottomBar = ({ classes }) => (\n  <AppBar position=\"absolute\" color=\"primary\" className={classes.appBarBottom}>\n    <Toolbar className={classes.toolbar}>\n      <IconButton color=\"inherit\" aria-label=\"Open drawer\">\n        <MenuIcon />\n      </IconButton>\n      <div>\n        <IconButton color=\"inherit\">\n          <SearchIcon />\n        </IconButton>\n        <IconButton color=\"inherit\">\n          <MoreIcon />\n        </IconButton>\n      </div>\n    </Toolbar>\n  </AppBar>\n);\n*/\n\nconst App = ({ classes }) => (\n  <BrowserRouter>\n    <MuiThemeProvider theme={theme}>\n      <Header classes={classes} />\n      <div style={{ }}>\n        <Route exact path=\"/home\" component={Home} />\n        <Route path=\"/\" component={Plots} />\n        {/*<Route component={Error} />*/}\n        {/*<BottomBar classes={classes} />*/}\n      </div>\n    </MuiThemeProvider>\n  </BrowserRouter>\n);\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}